#!/bin/bash

# Predefined thresholds
CPU_THRESHOLD=80
MEMORY_THRESHOLD=80
DISK_THRESHOLD=90
PROCESS_THRESHOLD=100

# Log file location
LOG_FILE="/var/log/system_health_monitor.log"

# Function to check CPU usage
check_cpu_usage() {
  # Get the CPU usage as a percentage (excluding idle)
  CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
  if (( $(echo "$CPU_USAGE > $CPU_THRESHOLD" | bc -l) )); then
    echo "ALERT: High CPU usage: $CPU_USAGE%" | tee -a $LOG_FILE
  else
    echo "CPU usage is normal: $CPU_USAGE%" | tee -a $LOG_FILE
  fi
}

# Function to check memory usage
check_memory_usage() {
  # Get memory usage as a percentage
  MEMORY_USAGE=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
  if (( $(echo "$MEMORY_USAGE > $MEMORY_THRESHOLD" | bc -l) )); then
    echo "ALERT: High memory usage: $MEMORY_USAGE%" | tee -a $LOG_FILE
  else
    echo "Memory usage is normal: $MEMORY_USAGE%" | tee -a $LOG_FILE
  fi
}

# Function to check disk usage
check_disk_usage() {
  # Loop through all mounted file systems and check usage
  DISK_USAGE=$(df -h | grep -E '^/dev' | awk '{ if ($5+0 > '"$DISK_THRESHOLD"') print $0 }')
  if [[ ! -z "$DISK_USAGE" ]]; then
    echo "ALERT: High disk usage detected!" | tee -a $LOG_FILE
    echo "$DISK_USAGE" | tee -a $LOG_FILE
  else
    echo "Disk usage is normal." | tee -a $LOG_FILE
  fi
}

# Function to check the number of running processes
check_running_processes() {
  # Get the number of running processes
  PROCESS_COUNT=$(ps aux --no-headers | wc -l)
  if (( PROCESS_COUNT > PROCESS_THRESHOLD )); then
    echo "ALERT: Too many running processes: $PROCESS_COUNT" | tee -a $LOG_FILE
  else
    echo "Running processes count is normal: $PROCESS_COUNT" | tee -a $LOG_FILE
  fi
}

# Function to send health report
send_report() {
  echo "System Health Report (Generated on $(date))" > $LOG_FILE
  check_cpu_usage
  check_memory_usage
  check_disk_usage
  check_running_processes
}

# Run the system health checks
send_report

